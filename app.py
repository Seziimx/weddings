from flask import Flask, render_template, request, redirect, url_for, Response
import sqlite3
import os
import requests
from dotenv import load_dotenv
# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env (–ª–æ–∫–∞–ª—å–Ω–æ)
load_dotenv()

app = Flask(__name__)

# Telegram Bot Token –∏ —Ç–≤–æ–π chat_id
token = os.getenv("BOT_TOKEN")
chat_id = os.getenv("CHAT_ID")

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ‚Äî –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
def init_db():
    if not os.path.exists("guests.db"):
        conn = sqlite3.connect("guests.db")
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE guests (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                phone TEXT NOT NULL,
                relation TEXT NOT NULL,
                comment TEXT,
                gift TEXT NOT NULL
            )
        ''')
        conn.commit()
        conn.close()

init_db()

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/")
def index():
    return render_template("index.html")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
@app.route("/submit", methods=["POST"])
def submit():
    name = request.form["name"]
    phone = request.form["phone"]
    relation = request.form["relation"]
    comment = request.form["comment"]
    gift = request.form["gift"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    conn = sqlite3.connect("guests.db")
    cursor = conn.cursor()
    cursor.execute("INSERT INTO guests (name, phone, relation, comment, gift) VALUES (?, ?, ?, ?, ?)",
               (name, phone, relation, comment, gift))
    conn.commit()
    conn.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    send_to_telegram(name, phone, relation,  comment, gift)

    return redirect(url_for("thanks"))

# –°–ø–∞—Å–∏–±–æ-—Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/thanks")
def thanks():
    return render_template("thanks.html")

# –ü—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Å—Ç–µ–π (–∑–∞—â–∏—â–µ–Ω–æ –ª–æ–≥–∏–Ω–æ–º)
@app.route("/guests")
def show_guests():
    auth = request.authorization
    if not auth or not (auth.username == "admin" and auth.password == "1234"):
        return Response("–¢–µ–∫ “õ–∞–Ω–∞ ”ô–∫—ñ–º—à—ñ–ª—ñ–∫ “Ø—à—ñ–Ω üëÆ‚Äç‚ôÄÔ∏è", 401, {"WWW-Authenticate": 'Basic realm="Login Required"'})

    conn = sqlite3.connect("guests.db")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM guests")
    guests = cursor.fetchall()
    conn.close()

    return render_template("guests.html", guests=guests)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
def send_to_telegram(name, phone, relation, comment, gift):
    token = os.getenv("BOT_TOKEN")
    chat_id = os.getenv("CHAT_ID")
    
    message = f"""
üìã –ñ–∞“£–∞ “õ–æ–Ω–∞“õ!
üë§ –ê—Ç—ã: {name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}
ü§ù –¢—É—ã—Å—Ç—ã“õ “õ–∞—Ç—ã—Å—ã: {relation}
üéÅ –ö”ô–¥–µ: {gift} ‚Ç∏
üìù –¢—ñ–ª–µ–≥—ñ: {comment if comment else '‚Äî'}
    """

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message
    }
    try:
        requests.post(url, json=payload)
    except Exception as e:
        print(f"‚ùå Telegram-“ì–∞ –∂—ñ–±–µ—Ä—É “õ–∞—Ç–µ—Å—ñ: {e}")



# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(debug=True)